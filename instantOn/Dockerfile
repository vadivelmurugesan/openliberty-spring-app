# ------------------------------------------------------------
# Stage 1: Build Thin JAR using Open Liberty Full Image
# ------------------------------------------------------------
FROM icr.io/appcafe/open-liberty:full-java17-openj9-ubi-minimal AS staging

# Build-time arguments (passed via --build-arg in CI/CD)
ARG APP_NAME=app-name
ARG APP_VERSION=1.0-SNAPSHOT

# Working directory for staging artifacts
WORKDIR /staging

# Copy the fat Spring Boot JAR generated by Maven/Gradle
COPY --chown=1001:0 target/${APP_NAME}-${APP_VERSION}.jar ./fat.jar

# Convert fat JAR into a thin JAR using Open Liberty utility
RUN springBootUtility thin \
    --sourceAppPath=fat.jar \
    --targetThinAppPath=thin.jar \
    --targetLibCachePath=lib.index.cache


# ------------------------------------------------------------
# Stage 2: Create Slim Runtime Image
# ------------------------------------------------------------
FROM icr.io/appcafe/open-liberty:kernel-slim-java17-openj9-ubi-minimal

# Re-declare build-time arguments in the new stage (required)
ARG APP_NAME=app-name
ARG APP_VERSION=1.0-SNAPSHOT

# Define environment variables for runtime and reusability
ENV APP_NAME=${APP_NAME} \
    APP_VERSION=${APP_VERSION} \
    APP_JAR_NAME=${APP_NAME}-${APP_VERSION}.jar

# OCI image metadata
LABEL org.opencontainers.image.title="${APP_NAME}" \
      org.opencontainers.image.version="${APP_VERSION}" \
      org.opencontainers.image.authors="Your Name <your.email@example.com>" \
      org.opencontainers.image.vendor="Your Company" \
      org.opencontainers.image.description="Thin JAR Spring Boot app running on Open Liberty." \
      org.opencontainers.image.source="https://github.com/your-org/${APP_NAME}"

# Set secure non-root user
USER 1001

# Define working directory for server config
WORKDIR /config

# tag::cracXml[]
COPY --chown=1001:0 src/main/liberty/instantOn/crac.xml \
                    ./configDropins/defaults/crac.xml
# end::cracXml[]

# Use default Spring Boot Liberty server configuration
COPY --chown=1001:0 src/main/liberty/config/server.env ./server.env
COPY --chown=1001:0 src/main/liberty/config/server.xml ./server.xml
COPY --chown=1001:0 src/main/liberty/config/jvm.options ./jvm.options


# Install Liberty features defined in server.xml
RUN features.sh

# Copy the thin JAR and dependency cache from the staging build
COPY --chown=1001:0 --from=staging /staging/lib.index.cache /lib.index.cache
COPY --chown=1001:0 --from=staging /staging/thin.jar ./dropins/spring/${APP_JAR_NAME}

# Add Docker-native health check for container monitoring
HEALTHCHECK --interval=30s --timeout=5s --start-period=10s --retries=3 \
  CMD curl -f https://localhost:9443/actuator/health || exit 1

# Expose application port for runtime
EXPOSE 9443

# Apply configuration and start the Open Liberty runtime
RUN configure.sh